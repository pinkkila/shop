spring:
  application:
    name: "gateway"

  config:
    import: "optional:classpaht:./../../../../../secrets.properties"

  session:
    redis:
      repository-type: indexed
      namespace: "spring:session:gate"

#  data:
#    redis:
#      host: ${REDIS_HOST:localhost}
#      port: ${REDIS_PORT:6379}
  #      password:

  security:
    oauth2:
      client:
        registration:
          spring:
            provider: spring
            client-id: client
            client-secret: ${GATE_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_basic
            redirect-uri:
              - "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - openid
        provider:
          spring:
            issuer-uri: ${ISSUER_URI:http://localhost:9090}

  cloud:
    gateway:
      routes:
        - id: api
          uri: ${RESOURCE_SERVER_URL:http://localhost:7070}
          predicates:
            - Path=/api/**
          filters:
            - SaveSession
            - TokenRelay=
            - RewritePath=/api/?(?<segment>.*), /$\{segment}

        - id: shopapi
          uri: ${RESOURCE_SERVER_URL:http://localhost:7070}
          predicates:
            - Path=/shopapi/**
          filters:
            - SaveSession
            - RewritePath=/shopapi/?(?<segment>.*), /$\{segment}

        - id: shop
          uri: ${SHOP_URI:http://127.0.0.1:5173/shop}
          predicates:
            - Path=/shop/**
          filters:
            - SaveSession

        - id: crm
          uri: ${CRM_URI:http://127.0.0.1:5174/crm}
          predicates:
            - Path=/crm/**
          filters:
            - SaveSession
            - TokenRelay=

logging:
  level:
    org.springframework:
      security: trace